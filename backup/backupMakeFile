PROJ_NAME = tetris

BUILD_DIR = build/

CPP_SOURCE = $(wildcard src/*.cpp)

H_SOURCE = $(wildcard headers/*.hpp)

OBJ = $(CPP_SOURCE: src/*.o = obj/*.o)

CC = g++

CC_FLAGS =  -c -Wall

SFML = -lsfml-graphics -lsfml-system -lsfml-window 

INC = -I ../SFML-2.5.1/include -I headers/

LIB = -L ../SFML-2.5.1/lib

RM = del

all: $(OBJ) $(PROJ_NAME)


$(PROJ_NAME): $(OBJ)
	@ echo 'Building binary using GPP linker : $@'
	$(CC) $^ $(SFML) $(INC) $(LIB) -o "$(BUILD_DIR)$@"
	@ echo 'Finished build binary: $@'
	@ echo ' '

obj/%.o: src/%.cpp header/%.hpp
	@ echo 'Building target using GCC compiler: $<'
	$(CC) $< $(CC_FLAGS) -o $@
	@ echo ' '

obj/main.o: src/main.cpp $(HPP_SOURCE)
	@ echo 'Building target using GCC compiler $<'
	$(CC) $< $(CC_FLAGS) $@
	@ eco ' ',

clean:
	@ (RM) obj/*.o $(PROJ_NAME) *~
	@ rmdir obj


.PHONY: all clean